{"version":3,"file":"static/js/18.5497fd11.chunk.js","mappings":"iOACA,EAAmC,uCAAnC,EAAwF,kCAAxF,EAAuI,iCAAvI,EAAsL,kCAAtL,EAA2O,uCAA3O,EAA8R,gCAA9R,EAAgV,sCAAhV,EAAgY,8BAAhY,EAAya,+B,SCyFza,EA/EqB,WAAO,IAAD,IACjBA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACMC,GAAWC,EAAAA,EAAAA,MACXC,EAAY,oBAAGF,EAASG,aAAZ,aAAG,EAAgBH,gBAAnB,QAA+B,IAQjD,IANAI,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAgBC,OAAOX,IACpBY,KAAKR,GACLS,OAAM,SAAAC,GAAQ,OAAIC,QAAQC,IAAIF,EAAhB,GAClB,GAAE,CAACd,IAECG,EAAL,CAIA,IACEc,EAOEd,EAPFc,YACAC,EAMEf,EANFe,MACAC,EAKEhB,EALFgB,KACAC,EAIEjB,EAJFiB,aACAC,EAGElB,EAHFkB,aACAC,EAEEnB,EAFFmB,SACAC,EACEpB,EADFoB,OAGF,OACE,iBAAKC,UAAWC,EAAhB,WACE,SAAC,KAAD,CAAMC,GAAInB,EAAciB,UAAWC,EAAnC,mBAIA,iBAAKD,UAAWC,EAAhB,WACE,gBAAKD,UAAWC,EAAhB,SACGR,GACC,gBACEU,IAAG,0CAAqCV,GACxCW,IAAKV,GAAgBC,KAGvB,gBACEQ,IACE,6FAEFC,IAAKV,GAAgBC,EACrBU,MAAM,MACNC,OAAO,WAIb,iBAAKN,UAAWC,EAAhB,WACE,gBAAID,UAAWC,EAAf,UACGP,EADH,IACW,IAAIa,KAAKX,GAAcY,cADlC,QAGA,wCAAgBC,KAAKC,MAAOb,EAAe,GAAM,KAAjD,QACA,uCACA,uBAAIC,KACJ,sCACA,uBAAIC,EAASA,EAAOY,KAAI,SAAAC,GAAK,OAAIA,EAAMjB,IAAV,IAAgBkB,KAAK,MAAQ,aAG9D,iBAAKb,UAAWC,EAAhB,WACE,eAAID,UAAWC,EAAf,qCAGA,SAAC,KAAD,CAASC,GAAG,OAAOlB,MAAOH,EAASG,MAAOgB,UAAWC,EAArD,mBAGA,SAAC,KAAD,CAASC,GAAG,UAAUlB,MAAOH,EAASG,MAAOgB,UAAWC,EAAxD,sBAGA,SAAC,EAAAa,SAAD,CAAUC,UAAU,6CAApB,UACE,SAAC,KAAD,WA1DP,CA+DF,C,+LCtFDC,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAEHC,EAAW,mCAAG,WAAMC,GAAN,uFACFH,EAAAA,EAAAA,IAAA,+BACGC,EADH,iCACmCE,IAFjC,cACnBC,EADmB,yBAKlBA,EAASC,KAAKC,SALI,2CAAH,sDAQXC,EAAW,mCAAG,oGACFP,EAAAA,EAAAA,IAAA,qCAAwCC,IADtC,cACnBG,EADmB,yBAElBA,EAASC,KAAKC,SAFI,2CAAH,qDAKXpC,EAAe,mCAAG,WAAMV,GAAN,uFACNwC,EAAAA,EAAAA,IAAA,gBACZxC,EADY,oBACOyC,EADP,oBADM,cACvBG,EADuB,yBAItBA,EAASC,MAJa,2CAAH,sDAOfG,EAAe,mCAAG,WAAMhD,GAAN,uFACNwC,EAAAA,EAAAA,IAAA,gBACZxC,EADY,4BACeyC,EADf,oBADM,cACvBG,EADuB,yBAItBA,EAASC,KAAKI,MAJQ,2CAAH,sDAMfC,EAAe,mCAAG,WAAMlD,GAAN,uFACNwC,EAAAA,EAAAA,IAAA,gBACZxC,EADY,4BACeyC,EADf,oBADM,cACvBG,EADuB,yBAItBA,EAASC,KAAKC,SAJQ,2CAAH,qD","sources":["webpack://react-homework-template/./src/components/MovieDetails/MovieDetails.module.scss?0a3a","components/MovieDetails/MovieDetails.jsx","services/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"movie__container\":\"MovieDetails_movie__container__A4eC5\",\"movie__wrap\":\"MovieDetails_movie__wrap__wXTl3\",\"movie__img\":\"MovieDetails_movie__img__1fOtp\",\"movie__info\":\"MovieDetails_movie__info__Hdgs2\",\"movie__info_name\":\"MovieDetails_movie__info_name__6SEDV\",\"add__info\":\"MovieDetails_add__info__iTpAD\",\"add__info_title\":\"MovieDetails_add__info_title__Jc-ba\",\"navLink\":\"MovieDetails_navLink__gOSZE\",\"btn_back\":\"MovieDetails_btn_back__e9DHI\"};","import { Suspense, useEffect, useState } from 'react';\nimport {\n  Link,\n  Outlet,\n  useParams,\n  useLocation,\n  NavLink,\n} from 'react-router-dom';\nimport { getMovieDetails } from 'services/api';\nimport styles from './MovieDetails.module.scss';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n  const location = useLocation();\n  const backLinkHref = location.state?.location ?? '/';\n\n  useEffect(() => {\n    getMovieDetails(Number(movieId))\n      .then(setMovie)\n      .catch(messsage => console.log(messsage));\n  }, [movieId]);\n\n  if (!movie) {\n    return;\n  }\n\n  const {\n    poster_path,\n    title,\n    name,\n    release_date,\n    vote_average,\n    overview,\n    genres,\n  } = movie;\n\n  return (\n    <div className={styles.movie__container}>\n      <Link to={backLinkHref} className={styles.btn_back}>\n        BACK\n      </Link>\n\n      <div className={styles.movie__wrap}>\n        <div className={styles.movie__img}>\n          {poster_path ? (\n            <img\n              src={`https://image.tmdb.org/t/p/w300/${poster_path}`}\n              alt={title ? title : name}\n            />\n          ) : (\n            <img\n              src={\n                'https://www.feed-image-editor.com/sites/default/files/perm/wysiwyg/image_not_available.png'\n              }\n              alt={title ? title : name}\n              width=\"300\"\n              height=\"450\"\n            />\n          )}\n        </div>\n        <div className={styles.movie__info}>\n          <h2 className={styles.movie__info_name}>\n            {title}({new Date(release_date).getFullYear()})\n          </h2>\n          <h3>Use Score: {Math.round((vote_average / 10) * 100)}%</h3>\n          <h3>Overview:</h3>\n          <p>{overview}</p>\n          <h3>Genres: </h3>\n          <p>{genres ? genres.map(genre => genre.name).join(', ') : '-'}</p>\n        </div>\n      </div>\n      <div className={styles.add__info}>\n        <h2 className={styles.add__info_title}>\n          Additional information\n        </h2>\n        <NavLink to=\"cast\" state={location.state} className={styles.navLink}>\n          CAST\n        </NavLink>\n        <NavLink to=\"reviews\" state={location.state} className={styles.navLink}>\n          Reviews\n        </NavLink>\n        <Suspense fallback={<div>Loading page...</div>}>\n          <Outlet />\n        </Suspense>\n      </div>\n    </div>\n  );\n};\n\nexport default MovieDetails;","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '89161555af7f1a35b84e8b27681fa7a6';\n\nexport const searchMovie = async query => {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&language=en-US&query=${query}`\n  );\n\n  return response.data.results;\n};\n\nexport const getTrending = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response.data.results;\n};\n\nexport const getMovieDetails = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getMovieCredits = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.cast;\n};\nexport const getMovieReviews = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.results;\n};"],"names":["movieId","useParams","useState","movie","setMovie","location","useLocation","backLinkHref","state","useEffect","getMovieDetails","Number","then","catch","messsage","console","log","poster_path","title","name","release_date","vote_average","overview","genres","className","styles","to","src","alt","width","height","Date","getFullYear","Math","round","map","genre","join","Suspense","fallback","axios","API_KEY","searchMovie","query","response","data","results","getTrending","getMovieCredits","cast","getMovieReviews"],"sourceRoot":""}